#!/usr/bin/env python3

import json
import os
import subprocess
import requests


if __name__ == "__main__":
    root = os.path.dirname(__file__)
    generated_sources_path = f"{root}/generated-sources.json"
    subprocess.call(
        [
            "flatpak-node-generator",
            "yarn",
            "--electron-node-headers",
            "--node-chromedriver-from-electron",
            "9.3.1",
            "-r",
            f"{root}/desktop/yarn.lock",
            "-R",
            "yarn.lock",
            "-R",
            "app/yarn.lock",
        ],
        cwd=root,
    )

    with open(generated_sources_path, "r") as fp:
        generated_sources = json.load(fp)

    # Move electron-cache files to match what @electron/get expects
    # https://github.com/electron/get/blob/master/src/Cache.ts
    for source in generated_sources:
        if source.get("dest"):
            if source["dest"] == "flatpak-node/electron-cache":
                cache_dir = (
                    source["url"]
                    .split("?")[0]
                    .split("#")[0]
                    .translate(str.maketrans("", "", '<>:"/\\|?*'))[:255]
                )
                source["dest"] = f"flatpak-node/electron-cache/{cache_dir}"
                del source["dest-filename"]
        if source.get("type")=="git" and source.get("url") == "https://github.com/sergiou87/prebuild":
            req = requests.get("https://api.github.com/repos/sergiou87/prebuild/commits/master")
            jsn = req.json()
            source["commit"] = jsn["sha"]

    with open(generated_sources_path, "w") as fp:
        json.dump(generated_sources, fp, indent=4)
